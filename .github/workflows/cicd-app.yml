# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches:
      - dev
  pull_request:
    branches: ["dev"]
    paths-ignore:
      - ".github/**/*.yml"
      - ".gitignore"

  # Allows you to run this workflow manually from the Actions tab#
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_official_image:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: Build PRODUCTION APP Image
        run: |
          docker login -u qsquad3 -p ${{ secrets.TOKEN_DKR_HUB }}
          docker build -t app:dev .
          docker tag app:dev qsquad3/app:dev
          docker push qsquad3/app:dev
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

  check_image:
    needs: build_official_image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Building TEST Image
        run: |
          sed -i 's/10.0.3.14/pgsql/' Dockerfile
          docker build . -t app-quode-teste
          docker-compose -f pgsql-to-cicd.yml up -d
      - name: Health Check
        shell: bash
        run: |
          docker-compose -f pgsql-to-cicd.yml ps
          sleep 5
          if [ "`curl -s http://localhost:8181/healthcheck|awk {'print$3'}`" = "OK" ]
              then
                  echo "[  OK  ]"
                  exit 0
          else
                  exit 1
          fi
          sleep 2
